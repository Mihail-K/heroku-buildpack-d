#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e
#set -x
unset GIT_DIR

mkdir -p "$1" "$2"
BUILD_DIR=$(cd "$1/" && pwd)
CACHE_DIR=$(cd "$2/" && pwd)

function message {
  echo "$1"
  sync
}

function topic() {
  echo "-----> $*"
}

MACHINE=`uname -a`
message "-----> Welcome, this machine is: $MACHINE"

#if [ -z "$D_COMPILER_URL" ]; then
#    message "ERROR: you must specify D_COMPILER_URL to the D compiler for Linux. See README for this buildpack."
#    exit 1
#fi

cd $BUILD_DIR

message "-----> Installing D compiler via apt"

cd $CACHE_DIR

D_COMPILER_URL=http://downloads.dlang.org.s3-website-us-east-1.amazonaws.com/releases/2013/dmd.2.063.2.zip

APT_CACHE_DIR="$CACHE_DIR/apt/cache"
APT_STATE_DIR="$CACHE_DIR/apt/state"
APT_ETC_DIR="$CACHE_DIR/apt/etc"

mkdir -p "$APT_ETC_DIR/sources.list.d"
mkdir -p "$APT_CACHE_DIR/archives/partial"
mkdir -p "$APT_STATE_DIR/lists/partial"

APT_OPTIONS="-o debug::nolocking=true -o dir::cache=$APT_CACHE_DIR -o dir::state=$APT_STATE_DIR -o dir::etc::sourceparts=$APT_ETC_DIR/sources.list.d"

#curl -L http://netcologne.dl.sourceforge.net/project/d-apt/files/d-apt.list -o $APT_ETC_DIR/sources.list.d/d-apt.list
#message "-----> added apt location for D compiler"
message "-----> perform apt update" 
apt-get $APT_OPTIONS update
#message "-----> perform install libc6" 
#apt-get $APT_OPTIONS -y -d --ignore-missing install libc6-dev

#apt-get $APT_OPTIONS -y -d --allow-unauthenticated install --reinstall d-apt-keyring
#apt-get $APT_OPTIONS update 
#message "-----> perform apt install dmd-bin"
#apt-get $APT_OPTIONS -y -d --ignore-missing install dmd-bin
#message "-----> perform apt install dub" 
#apt-get $APT_OPTIONS -y -d --ignore-missing install dub
#message "-----> perform apt install dub" 
#apt-get $APT_OPTIONS -y -d --ignore-missing install dub
message "-----> perform apt install unzip" 
apt-get $APT_OPTIONS -y -d --ignore-missing install unzip
message "-----> perform apt install libevent libcrypto libssl libevent-dev libssl-dev" 
apt-get $APT_OPTIONS -y -d --ignore-missing install libevent-dev libssl-dev
message "-----> perform apt install pkg-config" 
apt-get $APT_OPTIONS -y -d --ignore-missing install pkg-config

for DEB in $(ls -1 $APT_CACHE_DIR/archives/*.deb); do
  topic "Installing $(basename $DEB)"
  dpkg -x $DEB $BUILD_DIR/.apt/
done

curl -L $D_COMPILER_URL -o dmd.zip
$BUILD_DIR/.apt/usr/bin/unzip dmd.zip

#curl -L http://code.dlang.org/files/dub-0.9.20-linux-x86_64.tar.gz -o - | tar xzf -

#message "-----> Copy D compiler to app root"
#cp -r $CACHE_DIR/d-sdk $BUILD_DIR

# we need to copy the sdk into the /app folder in order for the sdk libraries
# to be referenced correctly
# reason being that the /tmp folder will be deleted after build, and /app
# resembles the location of the ready built app
# cp -r $CACHE_DIR/dart-sdk /app

D_BIN=`ls -l $CACHE_DIR/dmd2/linux/bin64/dmd`
message "-----> D compiler cmd found at $D_BIN"

#CAN_D_RUN=`$CACHE_DIR/dmd2/linux/bin64/dmd`
#message "-----> D compiler reports version: $CAN_D_RUN"

#export PATH = $PATH:$CACHE_DIR/dmd2/linux/bin32/dmd
#chmod 755 $CACHE_DIR/dub
#DUB_BIN=`ls -l $CACHE_DIR/dub`
#message "-----> DUB package manager cmd found at $DUB_BIN"

#CAN_DUB_RUN=`$CACHE_DIR/dub`
#message "-----> DUB package manager reports version: $CAN_DUB_RUN"
export PATH=$PATH:$CACHE_DIR/dmd2/linux/bin64/:$CACHE_DIR/

git clone https://github.com/rejectedsoftware/dub
cd dub
./build.sh
cd ..

DUB_BIN=`ls -lh /app/tmp/cache/dub/bin/dub`
message "-----> DUB package manager cmd found at $DUB_BIN"
export PATH=$PATH:/app/tmp/cache/dub/bin/
ldconfig -p

message "-----> pkconfig "
pkg-config --libs libevent

cd $BUILD_DIR
ls -lh
dub --vverbose build
